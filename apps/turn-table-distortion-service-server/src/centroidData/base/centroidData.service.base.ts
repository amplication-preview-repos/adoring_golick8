/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CentroidData as PrismaCentroidData } from "@prisma/client";

export class CentroidDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CentroidDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.centroidData.count(args);
  }

  async centroidDataItems(
    args: Prisma.CentroidDataFindManyArgs
  ): Promise<PrismaCentroidData[]> {
    return this.prisma.centroidData.findMany(args);
  }
  async centroidData(
    args: Prisma.CentroidDataFindUniqueArgs
  ): Promise<PrismaCentroidData | null> {
    return this.prisma.centroidData.findUnique(args);
  }
  async createCentroidData(
    args: Prisma.CentroidDataCreateArgs
  ): Promise<PrismaCentroidData> {
    return this.prisma.centroidData.create(args);
  }
  async updateCentroidData(
    args: Prisma.CentroidDataUpdateArgs
  ): Promise<PrismaCentroidData> {
    return this.prisma.centroidData.update(args);
  }
  async deleteCentroidData(
    args: Prisma.CentroidDataDeleteArgs
  ): Promise<PrismaCentroidData> {
    return this.prisma.centroidData.delete(args);
  }
}
