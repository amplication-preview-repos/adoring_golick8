/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TurnTablePosition as PrismaTurnTablePosition,
} from "@prisma/client";

export class TurnTablePositionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TurnTablePositionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.turnTablePosition.count(args);
  }

  async turnTablePositions(
    args: Prisma.TurnTablePositionFindManyArgs
  ): Promise<PrismaTurnTablePosition[]> {
    return this.prisma.turnTablePosition.findMany(args);
  }
  async turnTablePosition(
    args: Prisma.TurnTablePositionFindUniqueArgs
  ): Promise<PrismaTurnTablePosition | null> {
    return this.prisma.turnTablePosition.findUnique(args);
  }
  async createTurnTablePosition(
    args: Prisma.TurnTablePositionCreateArgs
  ): Promise<PrismaTurnTablePosition> {
    return this.prisma.turnTablePosition.create(args);
  }
  async updateTurnTablePosition(
    args: Prisma.TurnTablePositionUpdateArgs
  ): Promise<PrismaTurnTablePosition> {
    return this.prisma.turnTablePosition.update(args);
  }
  async deleteTurnTablePosition(
    args: Prisma.TurnTablePositionDeleteArgs
  ): Promise<PrismaTurnTablePosition> {
    return this.prisma.turnTablePosition.delete(args);
  }
}
