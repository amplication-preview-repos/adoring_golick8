/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TestOption as PrismaTestOption } from "@prisma/client";

export class TestOptionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TestOptionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.testOption.count(args);
  }

  async testOptions(
    args: Prisma.TestOptionFindManyArgs
  ): Promise<PrismaTestOption[]> {
    return this.prisma.testOption.findMany(args);
  }
  async testOption(
    args: Prisma.TestOptionFindUniqueArgs
  ): Promise<PrismaTestOption | null> {
    return this.prisma.testOption.findUnique(args);
  }
  async createTestOption(
    args: Prisma.TestOptionCreateArgs
  ): Promise<PrismaTestOption> {
    return this.prisma.testOption.create(args);
  }
  async updateTestOption(
    args: Prisma.TestOptionUpdateArgs
  ): Promise<PrismaTestOption> {
    return this.prisma.testOption.update(args);
  }
  async deleteTestOption(
    args: Prisma.TestOptionDeleteArgs
  ): Promise<PrismaTestOption> {
    return this.prisma.testOption.delete(args);
  }
}
